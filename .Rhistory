csv_gliders <- read_csv("Data/gliders.csv")
source('~/Documents/R/R Projects/GIT/mariokart_setup/data_load_clean.R', echo=TRUE)
# Function that gives a DF with the 3 best Scores
give_personal_best <- function(speed_score, acceleration_score,
weight_score, handling_score,
traction_score, mini_turbo_score) {
personal_score <- cross_df_archetype %>%
mutate(
custom_score = speed_sum * speed_score +
acceleration_sum * acceleration_score +
weight_sum * weight_score +
handling_sum * handling_score +
traction_sum * traction_score +
mini_turbo_sum * mini_turbo_score
) %>%
slice_max(custom_score, n = 3)
return(personal_score)
}
# Example
personal_score <- give_personal_best(2, 1, 1, 0.5, 5, 1)
tibble(personal_score)
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, fill = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, color = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, fill = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50, aes(fill = archetype_lvl)) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl), fill = archetype_lvl) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, fill = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, fill = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "left")
View(cross_df_archetype)
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, fill = archetype_lvl_mean)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "left")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "left")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = archetype_lvl), color = "green") +
theme(legend.position = "none")
personal_score$position = 1:nrow(personal_score)
# Function that gives a DF with the 3 best Scores
give_personal_best <- function(speed_score, acceleration_score,
weight_score, handling_score,
traction_score, mini_turbo_score) {
personal_score <- cross_df_archetype %>%
mutate(
custom_score = speed_sum * speed_score +
acceleration_sum * acceleration_score +
weight_sum * weight_score +
handling_sum * handling_score +
traction_sum * traction_score +
mini_turbo_sum * mini_turbo_score
) %>%
slice_max(custom_score, n = 3)
personal_score$position = 1:nrow(personal_score)
return(personal_score)
}
# Example
personal_score <- give_personal_best(2, 1, 1, 0.5, 5, 1)
View(personal_score)
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = position), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed", x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl, fill = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green") +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 3) +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 2) +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 1.5) +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 1.3) +
theme(legend.position = "none")
# Example
personal_score <- give_personal_best(5, 1, 1, 0.5, 5, 1)
tibble(personal_score)
# Drawing the best combination into the histogram above
ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 1.3) +
theme(legend.position = "none")
give_personal_plot <- function(speed_score, acceleration_score,
weight_score, handling_score,
traction_score, mini_turbo_score) {
p <- ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL,
caption = paste("Speed: ", speed_score, ", Acc.: ", acceleration_score,
", Weight: ", weight_score, ", Handling: ", handling_score,
", Traction: ", traction_score, ", Turbo: ", mini_turbo_score)) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 1.3) +
theme(legend.position = "none")
return(p)
}
give_personal_plot(5, 1, 1, 0.5, 5, 1)
p <- ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL,
caption = paste("Speed: ", speed_score, ", Acc.: ", acceleration_score,
", Weight: ", weight_score, ", Handling: ", handling_score,
", Traction: ", traction_score, ", Turbo: ", mini_turbo_score, sep = "")) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 1.3) +
theme(legend.position = "none")
# Drawing the best combination into the histogram above
give_personal_plot <- function(speed_score, acceleration_score,
weight_score, handling_score,
traction_score, mini_turbo_score) {
p <- ggplot(cross_df_archetype, aes(x = archetype_lvl)) +
geom_histogram(bins = 50) +
scale_x_continuous(limits = c(-1.25, 1.25)) +
theme_minimal() +
labs(title = "Histogram of Archetype Scores", subtitle = "-1 = Handling and Accel., 1 = Heavy and Speed | Alpha = Position",
x = "Score", y = NULL,
caption = paste("Speed: ", speed_score, ", Acc.: ", acceleration_score,
", Weight: ", weight_score, ", Handling: ", handling_score,
", Traction: ", traction_score, ", Turbo: ", mini_turbo_score, sep = "")) +
geom_vline(data = personal_score, aes(xintercept = archetype_lvl, alpha = rev(position)), color = "green", size = 1.3) +
theme(legend.position = "none")
return(p)
}
give_personal_plot(5, 1, 1, 0.5, 5, 1)
ggsave("/Plots/personal_score_archetype.pdf", width = 10, height = 6)
ggsave("Plots/personal_score_archetype.pdf", width = 10, height = 6)
